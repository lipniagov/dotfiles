# set new prefix command
unbind C-b
set -g prefix C-s

# repeat commands
bind-key -r C-s send-prefix

# reload tmux config without restarting
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# use extended color scheme
set-option -g default-terminal "screen-256color"

# do not use vi-like editing in status line
# instead, you have C+a, C+e, C+p, C+n.. avaliable
set-option -g status-keys "emacs"

# neutral grey status line
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'

# display more chars in the sessions's name
set-option -g status-left-length 50

# right side of the status line
set-option -g status-right " #(battery -t)  #(date '+%a, %b %d - %I:%M')"

# open panes key bindings(opens new in curr dir)
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

# resize panes key bindings
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# open windows key bindings(opens new in curr dir)
bind c new-window -c "#{pane_current_path}"

# start windows index from 1, not 0
set-option -g base-index 1
set-option -g renumber-windows on

# send a pane to a secondary window
# while keeping the focus on the current window
bind-key b break-pane -d

# switch between sessions
bind-key C-j choose-tree

#---------------------------
# scrollback/copy mode
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#---------------------------

# Quickly view system & process info in htop
# tmux will close the pane when htop exits (handy!)
bind-key h split-window -h "htop"

# Fuzzy search for other active sessions
bind-key C-p split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Create a detached session, avoiding the concern for session nesting,
# and then attach to it.
# This allows us "break out" a session based on the current pane,
# even cleaning up the pane after creating the new session.
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill the current session and switch us to another session,
# keeping us connected to tmux
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Clear pane(instead of cmd+K which is disaster in tmux)
bind-key C-l send-keys C-l \; clear-history

# fix ssh agent when tmux is detached
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

# http://www.economyofeffort.com/2013/07/29/reattach-to-user-namespace-the-fix-for-your-tmux-in-os-x-woes/
set-option -g default-command "reattach-to-user-namespace -l zsh"
